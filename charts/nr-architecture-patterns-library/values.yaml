# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  repository: ~ # the repository where the images are stored.
  registry: ghcr.io # the registry where the images are stored. override during runtime for other registry at global level or individual level.
  domain: "apps.silver.devops.gov.bc.ca" # it is required, apps.silver.devops.gov.bc.ca for silver cluster
  openshiftImageRegistry: "image-registry.openshift-image-registry.svc:5000"
  tag: ~
  imagestreams:
    enabled: true

frontend:
  enabled: true
  deployment: # can be either a statefulSet or a deployment not both
    enabled: true
  containers:
    - name: frontend
      registry: '{{ .Values.global.registry }}' # example, it includes registry
      repository: '{{ .Values.global.repository }}' # example, it includes repository
      image: frontend # the exact component name, be it backend, api-1 etc...
      tag: '{{ .Values.global.tag }}' # example, it includes repository
      securityContext:
        capabilities:
          add: [ "NET_BIND_SERVICE" ]
      ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: http2
          containerPort: 3001
          protocol: TCP
      resources: # this is optional
        limits:
          cpu: 25m
          memory: 50Mi
        requests:
          cpu: 10m
          memory: 20Mi
      readinessProbe:
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 2
        timeoutSeconds: 2
        successThreshold: 1
        failureThreshold: 30
      livenessProbe:
        successThreshold: 1
        failureThreshold: 3
        httpGet:
          path: /health
          port: 3001
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 30
        timeoutSeconds: 5
  autoscaling:
    enabled: false

  service:
    enabled: true
    type: ClusterIP
    ports:
      - name: http
        port: 80
        targetPort: 3000 # the container port where the application is listening on
        protocol: TCP
  route:
    enabled: true
    host: "{{ .Release.Name }}.{{ .Values.global.domain }}"
    targetPort: http # look at line#164 refer to the name.
